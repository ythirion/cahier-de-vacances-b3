name: Build Matrix Artefacts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./proposed-solution/week08/front-end

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './proposed-solution/week08/front-end/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint frontend
        run: npm run lint
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run e2e tests
        run: npm run test:e2e
        
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./proposed-solution/week08/front-end/playwright-report
          retention-days: 30
          
      - name: Build frontend
        run: npm run build

      - name: Archive frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./proposed-solution/week08/front-end/dist
          
  backend-build:
    name: Backend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./proposed-solution/week08/api
        
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
          
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Begin SonarCloud analysis
        run: |
          dotnet-sonarscanner begin /k:"ythirion_cahier-de-vacances-b3" /o:"ythirion" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.sources="./proposed-solution/week08/api" /d:sonar.cs.analyzer.projectOutPaths="./proposed-solution/week08/api/**/bin" /d:sonar.verbose=true
      
      - name: Build
        run: dotnet build --no-restore --configuration Release
        
      - name: Test
        run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage;Format=opencover" --logger trx --results-directory ./TestResults/
        
      - name: End SonarCloud analysis
        run: dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish backend
        run: dotnet publish -c Release --property:PublishDir=./publish
        
      - name: Archive backend build
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ./proposed-solution/week08/api/publish