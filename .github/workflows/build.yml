name: Build Matrix Artefacts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./proposed-solution/week08/front-end

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './proposed-solution/week08/front-end/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint frontend
        run: npm run lint
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run e2e tests
        run: npm run test:e2e
        
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: ./proposed-solution/week08/front-end/playwright-report
          retention-days: 30
          
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-test-results
          path: ./proposed-solution/week08/front-end/test-results
          retention-days: 30
        
      - name: Build frontend
        run: npm run build
        
      - name: Upload coverage (optional)
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage
          flags: frontend
          fail_ci_if_error: false
          
      - name: Archive frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./proposed-solution/week08/front-end/dist
          
  backend-build:
    name: Backend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./proposed-solution/week08/api
        
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --no-restore
        
      - name: Test
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"
        
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish backend
        run: dotnet publish -c Release -o ./publish
        
      - name: Archive backend build
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ./proposed-solution/week08/api/publish